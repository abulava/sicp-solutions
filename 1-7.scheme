;; exercise 1.7

(define (average x y)
  (/ (+ x y) 2))

(define (improve guess x)
  (average guess (/ x guess)))

(define (sqrt x)
  (sqrt-iter 1.0 x x))

(define (sqrt-iter guess guess-prev x)
  (if (good-enough? guess guess-prev)
      guess
      (sqrt-iter (improve guess x)
                 guess
                 x)))

(define (good-enough? guess guess-prev)
  (< (abs                         ;; эквивалент (< (abs
      (- 1 (/ guess-prev guess))) ;;                (- guess guess-prev))
      0.001))                     ;;               (* guess 0.001))

;; good-enough? работает одинаково хорошо для очень малых/больших x потому что в результате каждой итерации
;; значение (/ guess-prev guess) приближается к 1